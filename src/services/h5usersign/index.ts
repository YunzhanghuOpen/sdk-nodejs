// Code generated by sdk-codegen. DO NOT EDIT.
import YZHclient from "../../cmmon/client";

// H5UserPresignRequest H5 预申请签约接口请求
interface H5UserPresignRequest {
  // 平台企业 ID
  dealer_id: string;
  // 综合服务主体 ID
  broker_id: string;
  // 姓名
  real_name: string;
  // 证件号码
  id_card: string;
  // 证件类型 0：身份证 2：港澳居民来往内地通行证 3：护照 5：台湾居民来往大陆通行证
  certificate_type: number;
}

// H5UserPresignResponse H5 预申请签约接口返回
interface H5UserPresignResponse {
  // 用户 ID（废弃字段）
  uid: string;
  // H5 签约 token
  token: string;
}

// H5UserSignRequest H5 签约接口请求
interface H5UserSignRequest {
  // H5 签约 token
  token: string;
  // H5 页面主题颜色
  color: string;
  // 回调 URL 地址
  url: string;
  // 跳转 URL
  redirect_url: string;
}

// H5UserSignResponse H5 签约接口返回
interface H5UserSignResponse {
  // H5 签约页面 URL
  url: string;
}

// GetH5UserSignStatusRequest 获取用户签约状态请求
interface GetH5UserSignStatusRequest {
  // 平台企业 ID
  dealer_id: string;
  // 综合服务主体 ID
  broker_id: string;
  // 姓名
  real_name: string;
  // 证件号码
  id_card: string;
}

// GetH5UserSignStatusResponse 获取用户签约状态返回
interface GetH5UserSignStatusResponse {
  // 签约时间
  signed_at: string;
  // 用户签约状态
  status: number;
}

// H5UserReleaseRequest 用户解约请求
interface H5UserReleaseRequest {
  // 综合服务主体 ID
  broker_id: string;
  // 平台企业 ID
  dealer_id: string;
  // 姓名
  real_name: string;
  // 证件号码
  id_card: string;
  // 证件类型   0：身份证 2：港澳居民来往内地通行证 3：护照 5：台湾居民来往大陆通行证
  certificate_type: number;
}

// H5UserReleaseResponse 用户解约返回
interface H5UserReleaseResponse {
  // 是否解约成功
  status: string;
}

export class H5usersign extends YZHclient {
  constructor(conf: {
  app_dealer_id: string;
  app_broker_id: string;
  app_key: string;
  app_des3_key: string;
  app_public_Key: string;
  app_private_key: string;
  yzh_public_key: string;
  base_url?:string;
}) {
  super(conf);
}

// H5UserPresign H5 预申请签约接口
 async H5UserPresign(
   req: H5UserPresignRequest, 
   cb?: (error: null | string,rep: H5UserPresignResponse)=>void
): Promise<H5UserPresignResponse> {
   return this.request(
    "post", 
    "/api/sdk/v1/presign", 
    req,
    {encryption: false },
    cb
   );
}

// H5UserSign H5 签约接口
 async H5UserSign(
   req: H5UserSignRequest, 
   cb?: (error: null | string,rep: H5UserSignResponse)=>void
): Promise<H5UserSignResponse> {
   return this.request(
    "get", 
    "/api/sdk/v1/sign/h5", 
    req,
    {encryption: false },
    cb
   );
}

// GetH5UserSignStatus H5 获取用户签约状态
 async GetH5UserSignStatus(
   req: GetH5UserSignStatusRequest, 
   cb?: (error: null | string,rep: GetH5UserSignStatusResponse)=>void
): Promise<GetH5UserSignStatusResponse> {
   return this.request(
    "get", 
    "/api/sdk/v1/sign/user/status", 
    req,
    {encryption: false },
    cb
   );
}

// H5UserRelease H5 对接测试解约接口
 async H5UserRelease(
   req: H5UserReleaseRequest, 
   cb?: (error: null | string,rep: H5UserReleaseResponse)=>void
): Promise<H5UserReleaseResponse> {
   return this.request(
    "post", 
    "/api/sdk/v1/sign/release", 
    req,
    {encryption: false },
    cb
   );
}

}